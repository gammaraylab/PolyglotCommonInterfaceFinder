begin_compilation
  name " HotSpotOSRCompilation-355[org.gammaraylab.Main.loop()@14]"
  method "HotSpotOSRCompilation-355[org.gammaraylab.Main.loop()@14]"
  date 1725775562185
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a84 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a84  <|@  <|@
f <@~|@floating>@ <|@
tid j80 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 v132 v133 v134 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j80 
index: - 
=== Succesors ===
=== Usages ===
a84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j80 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a84 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
lastLocationAccess: - 
=== Succesors ===
next: j87 
=== Usages ===
v135 ?41 ?107 v117 v69 v68 ?106 ?14 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v132 lastLocationAccess: - #next: j87  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j80 
index: - 
=== Succesors ===
=== Usages ===
j87 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j80 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j87 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
lastLocationAccess: - 
=== Succesors ===
next: j90 
=== Usages ===
?41 v42 j47 j47 v68 ?106 j52 
=== Predecessor ===
a84 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v133 lastLocationAccess: - #next: j90  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j80 
index: - 
=== Succesors ===
=== Usages ===
j90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j80 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j90 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
lastLocationAccess: - 
=== Succesors ===
next: v81 
=== Usages ===
?41 ?106 j51 
=== Predecessor ===
j87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 lastLocationAccess: - #next: v81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: OSR_migration_end(long)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@741570ecaa20
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j80 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
j90 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j80 #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a84 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a84  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v121 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v120 #falseSuccessor: v121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: Klass* NULL
stampKind: Klass*
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a84 
index: - 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a84 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v135 
lastLocationAccess: - 
=== Succesors ===
next: v119 
=== Usages ===
v129 
=== Predecessor ===
v121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v135 lastLocationAccess: - #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v131 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: Klass*
valueDescription: Klass*
=== Inputs ===
merge: v123 
values: v124 v129 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v123 values: v124 v129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v118 v119 
=== Succesors ===
next: v74 
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v118 v119 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v130 
y: v93 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v130 y: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v71 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v71 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 v42 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@741566d06850
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j87 
y: j22 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j87 y: j22  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v77 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid j88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17171
stableDimension: 0
stamp: i32 [-17171] ⇊00000000ffffbced ⇈00000000ffffbced
stampKind: i32
value: int[-17171|0xffffffffffffbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j49 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j49  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j87 
y: j87 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j87 y: j87  <|@  <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i64
signature: [Ljdk.vm.ci.meta.JavaType;@741559ccde78
stamp: void
targetMethod: HotSpotMethod<TestCases.addAndDivide(long, long)>
=== Inputs ===
arguments: a84 j87 j47 
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a84 j87 j47  <|@  <|@
tid ?106 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 28
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a84 j87 - - - j90 - 
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a84 j87 - - - j90 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j49 <|@
d <@d|@=== Debug Properties ===
bci: 26
identity: ANY_LOCATION
polymorphic: false
stamp: i64
targetMethod: Direct#TestCases.addAndDivide
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v68 
stateDuring: ?106 
=== Succesors ===
next: v9 
=== Usages ===
j51 
=== Predecessor ===
v75 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v68 stateDuring: ?106 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid j51 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j49 
y: j90 
=== Succesors ===
=== Usages ===
j57 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j49 y: j90  <|@  <|@
f <@~|@floating>@ <|@
tid j33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j34 j52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j52 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j87 
y: j33 
=== Succesors ===
=== Usages ===
j56 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j87 y: j33  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
j49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j57 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v10 
values: j51 j32 
=== Succesors ===
=== Usages ===
?14 j32 ?107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: j51 j32  <|@  <|@
f <@~|@floating>@ <|@
tid j56 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v10 
values: j52 j34 
=== Succesors ===
=== Usages ===
?14 j34 ?107 v69 v23 j28 j28 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: j52 j34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.273390607896142E150
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
osrLoop: true
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v9 
=== Succesors ===
next: v27 
=== Usages ===
j57 j56 v35 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v9 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@741566d06850
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j56 
y: j22 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j56 y: j22  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v26 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v26 #falseSuccessor: v24  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 27
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a84 j56 - j57 - 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a84 j56 - j57 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
reason: UnreachedCode
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@741566e59130
stamp: void
=== Inputs ===
stateBefore: ?14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j30 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j30  <|@  <|@
f <@~|@floating>@ <|@
tid j28 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j56 
y: j56 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j56 y: j56  <|@  <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i64
signature: [Ljdk.vm.ci.meta.JavaType;@741559cce228
stamp: void
targetMethod: HotSpotMethod<TestCases.addAndDivide(long, long)>
=== Inputs ===
arguments: a84 j56 j28 
=== Succesors ===
=== Usages ===
j30 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a84 j56 j28  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 28
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a84 j56 - - - j57 - 
=== Succesors ===
=== Usages ===
j30 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a84 j56 - - - j57 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j30 <|@
d <@d|@=== Debug Properties ===
bci: 26
identity: ANY_LOCATION
polymorphic: false
stamp: i64
targetMethod: Direct#TestCases.addAndDivide
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v69 
stateDuring: ?107 
=== Succesors ===
next: v35 
=== Usages ===
j32 
=== Predecessor ===
v24 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v69 stateDuring: ?107 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid j32 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j30 
y: j57 
=== Succesors ===
=== Usages ===
j57 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j30 y: j57  <|@  <|@
f <@~|@floating>@ <|@
tid j34 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j56 
y: j33 
=== Succesors ===
=== Usages ===
j56 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j56 y: j33  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
j30 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16956
stableDimension: 0
stamp: i32 [-16956] ⇊00000000ffffbdc4 ⇈00000000ffffbdc4
stampKind: i32
value: int[-16956|0xffffffffffffbdc4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-17171 - -16956] ⇊00000000ffffbcc4 ⇈00000000ffffbded
valueDescription: i32
=== Inputs ===
merge: v108 
values: i110 i115 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: i110 i115  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 20] ⇈0000000000000014
valueDescription: i64
=== Inputs ===
merge: v108 
values: j88 j116 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: j88 j116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v109 v114 
=== Succesors ===
next: v113 
=== Usages ===
i111 j112 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v109 v114 #next: v113  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 27
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a84 j87 - j90 - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a84 j87 - j90 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?41 
actionAndReason: i111 
speculation: j112 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?41 actionAndReason: i111 speculation: j112  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a84 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a84  <|@  <|@
f <@~|@floating>@ <|@
tid j80 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 v132 v133 v134 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
result [v0|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j80 
index: - 
=== Succesors ===
=== Usages ===
a84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j80 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a84 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
lastLocationAccess: - 
=== Succesors ===
next: j87 
=== Usages ===
v135 ?41 ?107 v117 v69 v68 ?106 ?14 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v132 lastLocationAccess: - #next: j87  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
result [v0|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j80 
index: - 
=== Succesors ===
=== Usages ===
j87 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j80 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j87 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
lastLocationAccess: - 
=== Succesors ===
next: j90 
=== Usages ===
?41 v42 j47 j47 v68 ?106 j52 
=== Predecessor ===
a84 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v133 lastLocationAccess: - #next: j90  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
result [v0|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j80 
index: - 
=== Succesors ===
=== Usages ===
j90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j80 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j90 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
lastLocationAccess: - 
=== Succesors ===
next: v81 
=== Usages ===
?41 ?106 j51 
=== Predecessor ===
j87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 lastLocationAccess: - #next: v81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: OSR_migration_end(long)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@741570ecaa20
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j80 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
j90 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j80 #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a84 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a84  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v121 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v120 #falseSuccessor: v121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@741559032888 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV [v0|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [v0|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [r10|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x74158610be80:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: Klass* NULL
stampKind: Klass*
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a84 
index: - 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a84 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v135 
lastLocationAccess: - 
=== Succesors ===
next: v119 
=== Usages ===
v129 
=== Predecessor ===
v121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v135 lastLocationAccess: - #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v131 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@741559032bc8 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid v130 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: Klass*
valueDescription: Klass*
=== Inputs ===
merge: v123 
values: v124 v129 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v123 values: v124 v129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v118 v119 
=== Succesors ===
next: v74 
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v118 v119 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v130 
y: v93 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v130 y: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v71 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v71 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 v42 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@741566d06850
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j87 
y: j22 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j87 y: j22  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v77 #falseSuccessor: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid j88 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result int[-17171|0xffffffffffffbced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17171
stableDimension: 0
stamp: i32 [-17171] ⇊00000000ffffbced ⇈00000000ffffbced
stampKind: i32
value: int[-17171|0xffffffffffffbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17171|0xffffffffffffbced], long[0|0x0]] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j49 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j49  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j87 
y: j87 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j87 y: j87  <|@  <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i64
signature: [Ljdk.vm.ci.meta.JavaType;@741559ccde78
stamp: void
targetMethod: HotSpotMethod<TestCases.addAndDivide(long, long)>
=== Inputs ===
arguments: a84 j87 j47 
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a84 j87 j47  <|@  <|@
tid ?106 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 28
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a84 j87 - - - j90 - 
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a84 j87 - - - j90 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j49 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
bci: 26
identity: ANY_LOCATION
polymorphic: false
stamp: i64
targetMethod: Direct#TestCases.addAndDivide
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v68 
stateDuring: ?106 
=== Succesors ===
next: v9 
=== Usages ===
j51 
=== Predecessor ===
v75 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v68 stateDuring: ?106 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid j51 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j49 
y: j90 
=== Succesors ===
=== Usages ===
j57 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j49 y: j90  <|@  <|@
f <@~|@floating>@ <|@
tid j33 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j34 j52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j52 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j87 
y: j33 
=== Succesors ===
=== Usages ===
j56 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j87 y: j33  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
j49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = IMUL (x: v2|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:28) [bci: 26]
stack: v3|QWORD - 
locals: v1|QWORD[.] v2|QWORD - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(long, long)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = DEC v2|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD, v12|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j57 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v10 
values: j51 j32 
=== Succesors ===
=== Usages ===
?14 j32 ?107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: j51 j32  <|@  <|@
f <@~|@floating>@ <|@
tid j56 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v10 
values: j52 j34 
=== Succesors ===
=== Usages ===
?14 j34 ?107 v69 v23 j28 j28 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: j52 j34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.273390607896142E150
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
osrLoop: true
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v9 
=== Succesors ===
next: v27 
=== Usages ===
j57 j56 v35 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v9 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@741566d06850
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j56 
y: j22 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j56 y: j22  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v26 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v26 #falseSuccessor: v24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD, v14|QWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v14|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 27
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a84 j56 - j57 - 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a84 j56 - j57 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
reason: UnreachedCode
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@741566e59130
stamp: void
=== Inputs ===
stateBefore: ?14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 996] y: -6419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1008] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:27) [bci: 14]
locals: v1|QWORD[.] v14|QWORD - v13|QWORD - 
>@ <|@ instruction DEOPT info [bci:14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j30 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j30  <|@  <|@
f <@~|@floating>@ <|@
tid j28 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j56 
y: j56 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j56 y: j56  <|@  <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i64
signature: [Ljdk.vm.ci.meta.JavaType;@741559cce228
stamp: void
targetMethod: HotSpotMethod<TestCases.addAndDivide(long, long)>
=== Inputs ===
arguments: a84 j56 j28 
=== Succesors ===
=== Usages ===
j30 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a84 j56 j28  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 28
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a84 j56 - - - j57 - 
=== Succesors ===
=== Usages ===
j30 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a84 j56 - - - j57 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j30 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
bci: 26
identity: ANY_LOCATION
polymorphic: false
stamp: i64
targetMethod: Direct#TestCases.addAndDivide
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v69 
stateDuring: ?107 
=== Succesors ===
next: v35 
=== Usages ===
j32 
=== Predecessor ===
v24 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v69 stateDuring: ?107 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid j32 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j30 
y: j57 
=== Succesors ===
=== Usages ===
j57 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j30 y: j57  <|@  <|@
f <@~|@floating>@ <|@
tid j34 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j56 
y: j33 
=== Succesors ===
=== Usages ===
j56 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j56 y: j33  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
j30 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = IMUL (x: v14|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:28) [bci: 26]
stack: v13|QWORD - 
locals: v1|QWORD[.] v14|QWORD - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(long, long)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v13|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = DEC v14|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD, v18|QWORD] destination: B9 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result int[-16956|0xffffffffffffbdc4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16956
stableDimension: 0
stamp: i32 [-16956] ⇊00000000ffffbdc4 ⇈00000000ffffbdc4
stampKind: i32
value: int[-16956|0xffffffffffffbdc4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16956|0xffffffffffffbdc4], long[20|0x14]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i111 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-17171 - -16956] ⇊00000000ffffbcc4 ⇈00000000ffffbded
valueDescription: i32
=== Inputs ===
merge: v108 
values: i110 i115 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: i110 i115  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 20] ⇈0000000000000014
valueDescription: i64
=== Inputs ===
merge: v108 
values: j88 j116 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: j88 j116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v109 v114 
=== Succesors ===
next: v113 
=== Usages ===
i111 j112 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v109 v114 #next: v113  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 27
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a84 j87 - j90 - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a84 j87 - j90 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?41 
actionAndReason: i111 
speculation: j112 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?41 actionAndReason: i111 speculation: j112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 996], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1008], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:27) [bci: 14]
locals: v1|QWORD[.] v2|QWORD - v3|QWORD - 
>@ <|@ instruction DEOPT info [bci:14] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@741559032888 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV [v0|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [v0|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [r10|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x74158610be80:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@741559032bc8 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = IMUL (x: v2|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:28) [bci: 26]
stack: v3|QWORD - 
locals: v1|QWORD[.] v2|QWORD - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(long, long)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = DEC v2|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD, v12|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = IMUL (x: v14|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:28) [bci: 26]
stack: v13|QWORD - 
locals: v1|QWORD[.] v14|QWORD - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(long, long)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v13|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = DEC v14|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD, v18|QWORD] destination: B9 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD, v14|QWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v14|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17171|0xffffffffffffbced], long[0|0x0]] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 996], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1008], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:27) [bci: 14]
locals: v1|QWORD[.] v2|QWORD - v3|QWORD - 
>@ <|@ instruction DEOPT info [bci:14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16956|0xffffffffffffbdc4], long[20|0x14]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 996] y: -6419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1008] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:27) [bci: 14]
locals: v1|QWORD[.] v14|QWORD - v13|QWORD - 
>@ <|@ instruction DEOPT info [bci:14] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #10         // org.gammaraylab.TestCases
     3: dup           
     4: invokespecial #2          // org.gammaraylab.TestCases.<init>:()void
     7: astore_0      
     8: ldc2_w        #13         // 1000000000000
    11: lstore_1      
    12: lconst_0      
    13: lstore_3      
    14: lload_1       
    15: lconst_0      
    16: lcmp          
    17: ifle          38
    20: lload_3       
    21: aload_0       
    22: lload_1       
    23: lload_1       
    24: lload_1       
    25: lmul          
    26: invokevirtual #4          // org.gammaraylab.TestCases.addAndDivide:(long, long)long
    29: ladd          
    30: lstore_3      
    31: lload_1       
    32: lconst_1      
    33: lsub          
    34: lstore_1      
    35: goto          14
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@741559032888 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r11|QWORD[.] = MOV [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr    8  <|@ instruction stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r8|QWORD = MOV [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   12  <|@ instruction r9|QWORD = MOV [rsi|QWORD] size: QWORD <|@ <|@
      nr   14  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [r10|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x74158610be80:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   16  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   32  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@741559032bc8 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>} <|@ <|@
      nr   40  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction CMP r8|QWORD y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction stack:32|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = IMUL (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:28) [bci: 26]
stack: stack:32|QWORD - 
locals: stack:48|QWORD[.] stack:40|QWORD - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(long, long)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 state [bci:26] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: stack:32|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction r8|QWORD = DEC stack:40|QWORD size: QWORD <|@ <|@
      nr   76  <|@ instruction stack:40|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = IMUL (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:28) [bci: 26]
stack: stack:40|QWORD - 
locals: stack:48|QWORD[.] stack:32|QWORD - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(long, long)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 state [bci:26] <|@ <|@
      nr  110  <|@ instruction r10|QWORD = ADD (x: stack:40|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD = DEC stack:32|QWORD size: QWORD <|@ <|@
      nr  114  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B9 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   84  <|@ instruction CMP r8|QWORD y: 1 size: QWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[-17171|0xffffffffffffbced] <|@ <|@
      nr   54  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 996], y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 1008], y: r11|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:27) [bci: 14]
locals: stack:48|QWORD[.] r8|QWORD - r9|QWORD - 
>@ <|@ instruction DEOPT info [bci:14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVE input: int[-16956|0xffffffffffffbdc4] <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction MOV [r15|QWORD + 996] y: -6419 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [r15|QWORD + 1008] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:27) [bci: 14]
locals: r11|QWORD[.] r8|QWORD - r10|QWORD - 
>@ <|@ instruction DEOPT info [bci:14] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #10         // org.gammaraylab.TestCases
     3: dup           
     4: invokespecial #2          // org.gammaraylab.TestCases.<init>:()void
     7: astore_0      
     8: ldc2_w        #13         // 1000000000000
    11: lstore_1      
    12: lconst_0      
    13: lstore_3      
    14: lload_1       
    15: lconst_0      
    16: lcmp          
    17: ifle          38
    20: lload_3       
    21: aload_0       
    22: lload_1       
    23: lload_1       
    24: lload_1       
    25: lmul          
    26: invokevirtual #4          // org.gammaraylab.TestCases.addAndDivide:(long, long)long
    29: ladd          
    30: lstore_3      
    31: lload_1       
    32: lconst_1      
    33: lsub          
    34: lstore_1      
    35: goto          14
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@741559032888 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r11|QWORD[.] = MOV [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr    8  <|@ instruction stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r8|QWORD = MOV [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   12  <|@ instruction r9|QWORD = MOV [rsi|QWORD] size: QWORD <|@ <|@
      nr   14  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [r10|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x74158610be80:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   16  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   32  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@741559032bc8 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>} <|@ <|@
      nr   40  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction CMP r8|QWORD y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction stack:32|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = IMUL (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:28) [bci: 26]
stack: stack:32|QWORD - 
locals: stack:48|QWORD[.] stack:40|QWORD - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(long, long)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 state [bci:26] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: stack:32|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction r8|QWORD = DEC stack:40|QWORD size: QWORD <|@ <|@
      nr   76  <|@ instruction stack:40|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = IMUL (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:28) [bci: 26]
stack: stack:40|QWORD - 
locals: stack:48|QWORD[.] stack:32|QWORD - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(long, long)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 state [bci:26] <|@ <|@
      nr  110  <|@ instruction r10|QWORD = ADD (x: stack:40|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD = DEC stack:32|QWORD size: QWORD <|@ <|@
      nr  114  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B9 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction CMP r8|QWORD y: 1 size: QWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[-17171|0xffffffffffffbced] <|@ <|@
      nr   54  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 996], y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 1008], y: r11|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:27) [bci: 14]
locals: stack:48|QWORD[.] r8|QWORD - r9|QWORD - 
>@ <|@ instruction DEOPT info [bci:14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVE input: int[-16956|0xffffffffffffbdc4] <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction MOV [r15|QWORD + 996] y: -6419 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [r15|QWORD + 1008] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:27) [bci: 14]
locals: r11|QWORD[.] r8|QWORD - r10|QWORD - 
>@ <|@ instruction DEOPT info [bci:14] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #10         // org.gammaraylab.TestCases
     3: dup           
     4: invokespecial #2          // org.gammaraylab.TestCases.<init>:()void
     7: astore_0      
     8: ldc2_w        #13         // 1000000000000
    11: lstore_1      
    12: lconst_0      
    13: lstore_3      
    14: lload_1       
    15: lconst_0      
    16: lcmp          
    17: ifle          38
    20: lload_3       
    21: aload_0       
    22: lload_1       
    23: lload_1       
    24: lload_1       
    25: lmul          
    26: invokevirtual #4          // org.gammaraylab.TestCases.addAndDivide:(long, long)long
    29: ladd          
    30: lstore_3      
    31: lload_1       
    32: lconst_1      
    33: lsub          
    34: lstore_1      
    35: goto          14
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec2848896c24204c8b5e204c891c244c8b46104c8b0ee800000000904d85db0f84b3000000418b730848ba0000000008000000488d34f248baaddeaddeaddeadde483bd60f85bb0000004983f8010f8c900000004c894c2410498bc8490fafc8498bf3498bd04c89442408666690e8000000009048034424104c8b44240849ffc84889442408e93e0000000f1f84000000000066666690498bc8490fafc8498bf3498bd04c894424100f1f440000e800000000904c8b5424084c03d04c8b44241049ffc84c895424084c8b1c244983f8017dc4e93c00000048c7c600000000e953ffffff41baedbcffff49c7c300000000458997e40300004d899ff0030000e8000000009041bac4bdffff49c7c314000000ebdd4c8b54240841c787e4030000ede6ffff49c787f003000000000000e80000000090e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@741559032888 slotKind: QWORD  <||@
  Comment 16 6 r11|QWORD[.] = MOV [rsi|QWORD + 32] size: QWORD  <||@
  Comment 20 8 stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 24 10 r8|QWORD = MOV [rsi|QWORD + 16] size: QWORD  <||@
  Comment 28 12 r9|QWORD = MOV [rsi|QWORD] size: QWORD  <||@
  Comment 31 14 - = NEAR_FOREIGN_CALL [rsi|QWORD] [r10|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x74158610be80:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 31 {Stub<OSR_migration_end(long)void>@0x74158610be80:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 37 16 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 40 18 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 46 block B2 null  <||@
  Comment 46 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 28 rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 50 30 rdx|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 60 32 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@741559032bc8 encoding: base: 34359738368 shift: 3  <||@
  Comment 64 34 JUMP ~[] destination: B2 -> B3  <||@
  Comment 64 block B3 null  <||@
  Comment 64 36 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 64 38 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}  <||@
  Comment 64 {meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}}  <||@
  Comment 74 40 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 77 42 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B10  <||@
  Comment 83 block B4 null  <||@
  Comment 83 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 46 CMP r8|QWORD y: 1 size: QWORD  <||@
  Comment 87 48 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 93 block B6 null  <||@
  Comment 93 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 60 stack:32|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 98 62 rcx|QWORD = IMUL (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 105 64 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 108 66 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 111 68 stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 116 70 rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(long, long)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 state [bci:26]  <||@
  Comment 116 9  <||@
  Comment 119 {HotSpotMethod<TestCases.addAndDivide(long, long)>}  <||@
  Comment 124 [stack:0]at org.gammaraylab.Main.loop(Main.java:28) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD  |-  |-  |- 
     stack:   |stack:32|QWORD     |-               |   |   |    <||@
  Comment 125 72 rax|QWORD = ADD (x: rax|QWORD, y: stack:32|QWORD) size: QWORD  <||@
  Comment 130 74 r8|QWORD = DEC stack:40|QWORD size: QWORD  <||@
  Comment 138 76 stack:40|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 143 80 JUMP ~[] destination: B6 -> B7  <||@
  Comment 148 block B9 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 148 98 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 100 rcx|QWORD = IMUL (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 167 102 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 170 104 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 173 106 stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 178 108 rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(long, long)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 state [bci:26]  <||@
  Comment 178 9  <||@
  Comment 183 {HotSpotMethod<TestCases.addAndDivide(long, long)>}  <||@
  Comment 188 [stack:0]at org.gammaraylab.Main.loop(Main.java:28) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD  |-  |-  |- 
     stack:   |stack:40|QWORD     |-               |   |   |    <||@
  Comment 189 110 r10|QWORD = ADD (x: stack:40|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 197 112 r8|QWORD = DEC stack:32|QWORD size: QWORD  <||@
  Comment 205 114 stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 210 118 JUMP ~[] destination: B9 -> B7  <||@
  Comment 210 block B7 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 210 82 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 210 78 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 214 84 CMP r8|QWORD y: 1 size: QWORD  <||@
  Comment 218 86 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 225 block B1 null  <||@
  Comment 225 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 22 rsi|QWORD = MOVE input: Object[null]  <||@
  Comment 232 24 JUMP ~[] destination: B1 -> B3  <||@
  Comment 237 block B5 null  <||@
  Comment 237 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 52 r10|DWORD = MOVE input: int[-17171|0xffffffffffffbced]  <||@
  Comment 243 54 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 250 56 JUMP ~[] destination: B5 -> B11  <||@
  Comment 250 block B11 null  <||@
  Comment 250 128 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 250 130 MOV (x: [r15|QWORD + 996], y: r10|DWORD) size: DWORD  <||@
  Comment 257 132 MOV (x: [r15|QWORD + 1008], y: r11|QWORD) size: QWORD  <||@
  Comment 264 134 DEOPT info [bci:14]  <||@
  Comment 264 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7415aa668e80, value=127635791447972]:0x7415860287a4}  <||@
  Comment 269 [stack:0]at org.gammaraylab.Main.loop(Main.java:27) [bci: 14, duringCall: false, rethrow: false]
              |0                  |1         |2  |3         |4 
     locals:  |stack:48|QWORD[.]  |r8|QWORD  |-  |r9|QWORD  |-   <||@
  Comment 270 block B10 null  <||@
  Comment 270 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 270 122 r10|DWORD = MOVE input: int[-16956|0xffffffffffffbdc4]  <||@
  Comment 276 124 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 283 126 JUMP ~[] destination: B10 -> B11  <||@
  Comment 285 block B8 null  <||@
  Comment 285 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 285 90 r10|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 290 92 MOV [r15|QWORD + 996] y: -6419 size: DWORD  <||@
  Comment 301 94 MOV [r15|QWORD + 1008] y: 0 size: QWORD  <||@
  Comment 312 96 DEOPT info [bci:14]  <||@
  Comment 312 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7415aa668e80, value=127635791447972]:0x7415860287a4}  <||@
  Comment 317 [r11:0]at org.gammaraylab.Main.loop(Main.java:27) [bci: 14, duringCall: false, rethrow: false]
              |0             |1         |2  |3          |4 
     locals:  |r11|QWORD[.]  |r8|QWORD  |-  |r10|QWORD  |-   <||@
  Comment 318 {Stub<ExceptionHandlerStub.exceptionHandler>@0x74158610b380:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 318 4  <||@
  Comment 324 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7415aa668e88, value=127635791447712]:0x7415860286a0}  <||@
  Comment 324 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotOSRCompilation-355[org.gammaraylab.Main.loop()@14]"
  method "HotSpotOSRCompilation-355[org.gammaraylab.Main.loop()@14]"
  date 1725775562198
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7415902dafa0 89842400c0feff4883ec2848896c24204c8b5e204c891c244c8b46104c8b0ee8bc0ee3f5904d85db0f84b3000000418b730848ba0000000008000000488d34f248ba5082074008000000483bd60f85bb0000004983f8010f8c900000004c894c2410498bc8490fafc8498bf3498bd04c89442408666690e864cad4f59048034424104c8b44240849ffc84889442408e93e0000000f1f84000000000066666690498bc8490fafc8498bf3498bd04c894424100f1f440000e824cad4f5904c8b5424084c03d04c8b44241049ffc84c895424084c8b1c244983f8017dc4e93c00000048c7c600000000e953ffffff41baedbcffff49c7c300000000458997e40300004d899ff0030000e8f7d6d4f59041bac4bdffff49c7c314000000ebdd4c8b54240841c787e4030000ede6ffff49c787f003000000000000e8c7d6d4f590e89d02e3f590e8b7d5d4f590f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@741559032888 slotKind: QWORD  <||@
  Comment 16 6 r11|QWORD[.] = MOV [rsi|QWORD + 32] size: QWORD  <||@
  Comment 20 8 stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 24 10 r8|QWORD = MOV [rsi|QWORD + 16] size: QWORD  <||@
  Comment 28 12 r9|QWORD = MOV [rsi|QWORD] size: QWORD  <||@
  Comment 31 14 - = NEAR_FOREIGN_CALL [rsi|QWORD] [r10|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x74158610be80:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 31 {Stub<OSR_migration_end(long)void>@0x74158610be80:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 37 16 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 40 18 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 46 block B2 null  <||@
  Comment 46 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 28 rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 50 30 rdx|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 60 32 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@741559032bc8 encoding: base: 34359738368 shift: 3  <||@
  Comment 64 34 JUMP ~[] destination: B2 -> B3  <||@
  Comment 64 block B3 null  <||@
  Comment 64 36 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 64 38 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}  <||@
  Comment 64 {meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}}  <||@
  Comment 74 40 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 77 42 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B10  <||@
  Comment 83 block B4 null  <||@
  Comment 83 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 46 CMP r8|QWORD y: 1 size: QWORD  <||@
  Comment 87 48 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 93 block B6 null  <||@
  Comment 93 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 60 stack:32|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 98 62 rcx|QWORD = IMUL (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 105 64 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 108 66 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 111 68 stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 116 70 rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(long, long)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 state [bci:26]  <||@
  Comment 116 9  <||@
  Comment 119 {HotSpotMethod<TestCases.addAndDivide(long, long)>}  <||@
  Comment 124 [stack:0]at org.gammaraylab.Main.loop(Main.java:28) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD  |-  |-  |- 
     stack:   |stack:32|QWORD     |-               |   |   |    <||@
  Comment 125 72 rax|QWORD = ADD (x: rax|QWORD, y: stack:32|QWORD) size: QWORD  <||@
  Comment 130 74 r8|QWORD = DEC stack:40|QWORD size: QWORD  <||@
  Comment 138 76 stack:40|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 143 80 JUMP ~[] destination: B6 -> B7  <||@
  Comment 148 block B9 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 148 98 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 100 rcx|QWORD = IMUL (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 167 102 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 170 104 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 173 106 stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 178 108 rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(long, long)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 state [bci:26]  <||@
  Comment 178 9  <||@
  Comment 183 {HotSpotMethod<TestCases.addAndDivide(long, long)>}  <||@
  Comment 188 [stack:0]at org.gammaraylab.Main.loop(Main.java:28) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD  |-  |-  |- 
     stack:   |stack:40|QWORD     |-               |   |   |    <||@
  Comment 189 110 r10|QWORD = ADD (x: stack:40|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 197 112 r8|QWORD = DEC stack:32|QWORD size: QWORD  <||@
  Comment 205 114 stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 210 118 JUMP ~[] destination: B9 -> B7  <||@
  Comment 210 block B7 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 210 82 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 210 78 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 214 84 CMP r8|QWORD y: 1 size: QWORD  <||@
  Comment 218 86 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 225 block B1 null  <||@
  Comment 225 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 22 rsi|QWORD = MOVE input: Object[null]  <||@
  Comment 232 24 JUMP ~[] destination: B1 -> B3  <||@
  Comment 237 block B5 null  <||@
  Comment 237 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 52 r10|DWORD = MOVE input: int[-17171|0xffffffffffffbced]  <||@
  Comment 243 54 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 250 56 JUMP ~[] destination: B5 -> B11  <||@
  Comment 250 block B11 null  <||@
  Comment 250 128 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 250 130 MOV (x: [r15|QWORD + 996], y: r10|DWORD) size: DWORD  <||@
  Comment 257 132 MOV (x: [r15|QWORD + 1008], y: r11|QWORD) size: QWORD  <||@
  Comment 264 134 DEOPT info [bci:14]  <||@
  Comment 264 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7415aa668e80, value=127635791447972]:0x7415860287a4}  <||@
  Comment 269 [stack:0]at org.gammaraylab.Main.loop(Main.java:27) [bci: 14, duringCall: false, rethrow: false]
              |0                  |1         |2  |3         |4 
     locals:  |stack:48|QWORD[.]  |r8|QWORD  |-  |r9|QWORD  |-   <||@
  Comment 270 block B10 null  <||@
  Comment 270 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 270 122 r10|DWORD = MOVE input: int[-16956|0xffffffffffffbdc4]  <||@
  Comment 276 124 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 283 126 JUMP ~[] destination: B10 -> B11  <||@
  Comment 285 block B8 null  <||@
  Comment 285 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 285 90 r10|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 290 92 MOV [r15|QWORD + 996] y: -6419 size: DWORD  <||@
  Comment 301 94 MOV [r15|QWORD + 1008] y: 0 size: QWORD  <||@
  Comment 312 96 DEOPT info [bci:14]  <||@
  Comment 312 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7415aa668e80, value=127635791447972]:0x7415860287a4}  <||@
  Comment 317 [r11:0]at org.gammaraylab.Main.loop(Main.java:27) [bci: 14, duringCall: false, rethrow: false]
              |0             |1         |2  |3          |4 
     locals:  |r11|QWORD[.]  |r8|QWORD  |-  |r10|QWORD  |-   <||@
  Comment 318 {Stub<ExceptionHandlerStub.exceptionHandler>@0x74158610b380:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 318 4  <||@
  Comment 324 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7415aa668e88, value=127635791447712]:0x7415860286a0}  <||@
  Comment 324 5  <||@
  HexCodeFile>>> <|@
end_nmethod
