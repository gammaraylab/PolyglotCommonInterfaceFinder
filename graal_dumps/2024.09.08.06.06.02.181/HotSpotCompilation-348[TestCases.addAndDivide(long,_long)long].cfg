begin_compilation
  name " HotSpotCompilation-348[org.gammaraylab.TestCases.addAndDivide(long, long)]"
  method "HotSpotCompilation-348[org.gammaraylab.TestCases.addAndDivide(long, long)]"
  date 1725775562188
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid j2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j2 
y: j3 
=== Succesors ===
=== Usages ===
j14 j10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2 y: j3  <|@  <|@
f <@~|@floating>@ <|@
tid j9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1117984489315730401
stableDimension: 0
stamp: i64 [1117984489315730401] ⇊0f83e0f83e0f83e1 ⇈0f83e0f83e0f83e1
stampKind: i64
value: long[1117984489315730401|0xf83e0f83e0f83e1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j10 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j5 
y: j9 
=== Succesors ===
=== Usages ===
j12 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.nodes.calc.IntegerMulHighNode>@ x: j5 y: j9  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j12 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-4611686018427387904 - 4611686018427387903]
=== Inputs ===
x: j10 
y: i11 
=== Succesors ===
=== Usages ===
j15 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j10 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j14 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: j5 
y: i13 
=== Succesors ===
=== Usages ===
j15 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j5 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-4611686018427387904 - 4611686018427387904]
=== Inputs ===
x: j12 
y: j14 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j12 y: j14  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: j15 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: j15 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid j2 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j2 
y: j3 
=== Succesors ===
=== Usages ===
j14 j10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2 y: j3  <|@  <|@
f <@~|@floating>@ <|@
tid j9 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1117984489315730401
stableDimension: 0
stamp: i64 [1117984489315730401] ⇊0f83e0f83e0f83e1 ⇈0f83e0f83e0f83e1
stampKind: i64
value: long[1117984489315730401|0xf83e0f83e0f83e1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j10 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j5 
y: j9 
=== Succesors ===
=== Usages ===
j12 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.nodes.calc.IntegerMulHighNode>@ x: j5 y: j9  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j12 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-4611686018427387904 - 4611686018427387903]
=== Inputs ===
x: j10 
y: i11 
=== Succesors ===
=== Usages ===
j15 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j10 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j14 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: j5 
y: i13 
=== Succesors ===
=== Usages ===
j15 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j5 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-4611686018427387904 - 4611686018427387904]
=== Inputs ===
x: j12 
y: j14 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j12 y: j14  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: j15 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: j15 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7415596cc038 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = ADD (x: v0|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: long[1117984489315730401|0xf83e0f83e0f83e1] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = SAR v4|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHR v2|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = ADD (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v8|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7415596cc038 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = ADD (x: v0|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: long[1117984489315730401|0xf83e0f83e0f83e1] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = SAR v4|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHR v2|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = ADD (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v8|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_1       
     1: lload_3       
     2: ladd          
     3: lstore        5
     5: lload         5
     7: ldc2_w        #67         // 33
    10: ldiv          
    11: lstore        7
    13: lload         7
    15: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7415596cc038 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = MOVE input: long[1117984489315730401|0xf83e0f83e0f83e1] <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = SAR rdx|QWORD size: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD = SHR r10|QWORD y: 63 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_1       
     1: lload_3       
     2: ladd          
     3: lstore        5
     5: lload         5
     7: ldc2_w        #67         // 33
    10: ldiv          
    11: lstore        7
    13: lload         7
    15: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7415596cc038 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = MOVE input: long[1117984489315730401|0xf83e0f83e0f83e1] <|@ <|@
      nr   14  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = SAR rdx|QWORD size: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD = SHR r10|QWORD y: 63 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_1       
     1: lload_3       
     2: ladd          
     3: lstore        5
     5: lload         5
     7: ldc2_w        #67         // 33
    10: ldiv          
    11: lstore        7
    13: lload         7
    15: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e20349bc00000000080000004d03d44d33e4493bc20f85dfffffff906666660f1f840000000000666666906666660f1f840000000000666666900f1f4400004c8bd24c03d148bae1830f3ef8e0830f498bc248f7ea48d1fa49c1ea3f4903d2488bc2498b8f080100008501c5f877c3e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 27 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7415aa668e98, value=127635791443968]:0x741586027800}  <||@
  Comment 64 3  <||@
  Comment 64 1  <||@
  Comment 69 block B0 null  <||@
  Comment 69 0 [rsi|QWORD[.], rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 69 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7415596cc038 slotKind: QWORD  <||@
  Comment 69 10 r10|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 75 12 rdx|QWORD = MOVE input: long[1117984489315730401|0xf83e0f83e0f83e1]  <||@
  Comment 85 14 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 88 16 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 91 20 rdx|QWORD = SAR rdx|QWORD size: QWORD  <||@
  Comment 94 22 r10|QWORD = SHR r10|QWORD y: 63 size: QWORD  <||@
  Comment 98 24 rdx|QWORD = ADD (x: rdx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 101 26 rax|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 104 28 RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358  <||@
  Comment 111 14  <||@
  Comment 117 {Stub<ExceptionHandlerStub.exceptionHandler>@0x74158610b380:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 117 4  <||@
  Comment 123 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7415aa668e88, value=127635791447712]:0x7415860286a0}  <||@
  Comment 123 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-348[org.gammaraylab.TestCases.addAndDivide(long, long)]"
  method "HotSpotCompilation-348[org.gammaraylab.TestCases.addAndDivide(long, long)]"
  date 1725775562193
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7415902da800 448b560849c1e20349bc00000000080000004d03d44d33e4493bc20f85dfcfd4f5906666660f1f840000000000666666906666660f1f840000000000666666900f1f4400004c8bd24c03d148bae1830f3ef8e0830f498bc248f7ea48d1fa49c1ea3f4903d2488bc2498b8f080100008501c5f877c3e8060be3f590e820ded4f590f4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 27 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7415aa668e98, value=127635791443968]:0x741586027800}  <||@
  Comment 64 3  <||@
  Comment 64 1  <||@
  Comment 69 block B0 null  <||@
  Comment 69 0 [rsi|QWORD[.], rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 69 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7415596cc038 slotKind: QWORD  <||@
  Comment 69 10 r10|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 75 12 rdx|QWORD = MOVE input: long[1117984489315730401|0xf83e0f83e0f83e1]  <||@
  Comment 85 14 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 88 16 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 91 20 rdx|QWORD = SAR rdx|QWORD size: QWORD  <||@
  Comment 94 22 r10|QWORD = SHR r10|QWORD y: 63 size: QWORD  <||@
  Comment 98 24 rdx|QWORD = ADD (x: rdx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 101 26 rax|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 104 28 RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@741570ec4358  <||@
  Comment 111 14  <||@
  Comment 117 {Stub<ExceptionHandlerStub.exceptionHandler>@0x74158610b380:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 117 4  <||@
  Comment 123 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7415aa668e88, value=127635791447712]:0x7415860286a0}  <||@
  Comment 123 5  <||@
  HexCodeFile>>> <|@
end_nmethod
