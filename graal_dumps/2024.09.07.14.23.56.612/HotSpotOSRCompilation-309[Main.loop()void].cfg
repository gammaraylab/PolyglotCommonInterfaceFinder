begin_compilation
  name " HotSpotOSRCompilation-309[org.gammaraylab.Main.loop()@13]"
  method "HotSpotOSRCompilation-309[org.gammaraylab.Main.loop()@13]"
  date 1725719036612
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a82 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a82  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 v128 v129 v130 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j78 
index: - 
=== Succesors ===
=== Usages ===
a82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j78 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a82 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v128 
lastLocationAccess: - 
=== Succesors ===
next: i85 
=== Usages ===
v131 ?39 ?104 v114 v67 v66 ?103 ?14 
=== Predecessor ===
v77 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v128 lastLocationAccess: - #next: i85  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j78 
index: - 
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j78 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v129 
lastLocationAccess: - 
=== Succesors ===
next: i88 
=== Usages ===
?39 v40 i45 i45 v66 ?103 i50 
=== Predecessor ===
a82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v129 lastLocationAccess: - #next: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j78 
index: - 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j78 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v130 
lastLocationAccess: - 
=== Succesors ===
next: v79 
=== Usages ===
?39 ?103 i49 
=== Predecessor ===
i85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v130 lastLocationAccess: - #next: v79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: OSR_migration_end(long)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@79a688ecab48
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j78 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
i88 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j78 #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a82 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a82  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v117 #falseSuccessor: v118  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: Klass* NULL
stampKind: Klass*
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
v117 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v131 
lastLocationAccess: - 
=== Succesors ===
next: v116 
=== Usages ===
v125 
=== Predecessor ===
v118 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v131 lastLocationAccess: - #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v127 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
stamp: Klass*
valueDescription: Klass*
=== Inputs ===
merge: v120 
values: v121 v125 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v120 values: v121 v125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v115 v116 
=== Succesors ===
next: v72 
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v115 v116 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v126 
y: v90 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v126 y: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v69 #falseSuccessor: v71  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@79a67ed06850
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i20 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i85 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v75 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid j86 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16659
stableDimension: 0
stamp: i32 [-16659] ⇊00000000ffffbeed ⇈00000000ffffbeed
stampKind: i32
value: int[-16659|0xffffffffffffbeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: i47 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i85 
y: i85 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i85 y: i85  <|@  <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@79a671cc1868
stamp: void
targetMethod: HotSpotMethod<TestCases.addAndDivide(int, int)>
=== Inputs ===
arguments: a82 i85 i45 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a82 i85 i45  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 28
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a82 i85 - i88 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a82 i85 - i88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
bci: 23
identity: ANY_LOCATION
polymorphic: false
stamp: i32
targetMethod: Direct#TestCases.addAndDivide
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v66 
stateDuring: ?103 
=== Succesors ===
next: v9 
=== Usages ===
i49 
=== Predecessor ===
v73 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v66 stateDuring: ?103 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i47 
y: i88 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i47 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i32 i50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i85 
y: i31 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i85 y: i31  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
i47 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i49 i30 
=== Succesors ===
=== Usages ===
?14 i30 ?104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: i49 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i50 i32 
=== Succesors ===
=== Usages ===
?14 i32 ?104 v21 i26 i26 v67 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: i50 i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.273390607896142E150
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
osrLoop: true
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v9 
=== Succesors ===
next: v25 
=== Usages ===
i55 i54 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v9 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@79a67ed06850
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i20 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i54 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v24 #falseSuccessor: v22  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 27
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a82 i54 i55 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a82 i54 i55  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
reason: UnreachedCode
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@79a67ee59130
stamp: void
=== Inputs ===
stateBefore: ?14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: i28 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i54 
y: i54 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i54 y: i54  <|@  <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@79a671cc1c18
stamp: void
targetMethod: HotSpotMethod<TestCases.addAndDivide(int, int)>
=== Inputs ===
arguments: a82 i54 i26 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a82 i54 i26  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 28
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a82 i54 - i55 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a82 i54 - i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
bci: 23
identity: ANY_LOCATION
polymorphic: false
stamp: i32
targetMethod: Direct#TestCases.addAndDivide
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v67 
stateDuring: ?104 
=== Succesors ===
next: v33 
=== Usages ===
i30 
=== Predecessor ===
v22 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v67 stateDuring: ?104 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i28 
y: i55 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i28 y: i55  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i54 
y: i31 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i31  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i28 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid j113 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16444
stableDimension: 0
stamp: i32 [-16444] ⇊00000000ffffbfc4 ⇈00000000ffffbfc4
stampKind: i32
value: int[-16444|0xffffffffffffbfc4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v71 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16659 - -16444] ⇊00000000ffffbec4 ⇈00000000ffffbfed
valueDescription: i32
=== Inputs ===
merge: v105 
values: i107 i112 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v105 values: i107 i112  <|@  <|@
f <@~|@floating>@ <|@
tid j109 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 20] ⇈0000000000000014
valueDescription: i64
=== Inputs ===
merge: v105 
values: j86 j113 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v105 values: j86 j113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v106 v111 
=== Succesors ===
next: v110 
=== Usages ===
i108 j109 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v106 v111 #next: v110  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 27
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a82 i85 i88 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a82 i85 i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?39 
actionAndReason: i108 
speculation: j109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?39 actionAndReason: i108 speculation: j109  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a82 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a82  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 v128 v129 v130 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
result [v0|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j78 
index: - 
=== Succesors ===
=== Usages ===
a82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j78 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a82 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v128 
lastLocationAccess: - 
=== Succesors ===
next: i85 
=== Usages ===
v131 ?39 ?104 v114 v67 v66 ?103 ?14 
=== Predecessor ===
v77 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v128 lastLocationAccess: - #next: i85  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
result [v0|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j78 
index: - 
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j78 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i85 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v129 
lastLocationAccess: - 
=== Succesors ===
next: i88 
=== Usages ===
?39 v40 i45 i45 v66 ?103 i50 
=== Predecessor ===
a82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v129 lastLocationAccess: - #next: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
result [v0|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j78 
index: - 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j78 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i88 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v130 
lastLocationAccess: - 
=== Succesors ===
next: v79 
=== Usages ===
?39 ?103 i49 
=== Predecessor ===
i85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v130 lastLocationAccess: - #next: v79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: OSR_migration_end(long)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@79a688ecab48
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j78 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
i88 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j78 #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a82 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a82  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v117 #falseSuccessor: v118  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79a670228840 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [r10|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x79a69e10b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: Klass* NULL
stampKind: Klass*
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
v117 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v131 
lastLocationAccess: - 
=== Succesors ===
next: v116 
=== Usages ===
v125 
=== Predecessor ===
v118 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v131 lastLocationAccess: - #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v127 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79a670228b80 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid v126 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: Klass*
valueDescription: Klass*
=== Inputs ===
merge: v120 
values: v121 v125 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v120 values: v121 v125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v115 v116 
=== Succesors ===
next: v72 
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v115 v116 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v126 
y: v90 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v126 y: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v69 #falseSuccessor: v71  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@79a67ed06850
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i20 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i85 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v75 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid j86 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result int[-16659|0xffffffffffffbeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16659
stableDimension: 0
stamp: i32 [-16659] ⇊00000000ffffbeed ⇈00000000ffffbeed
stampKind: i32
value: int[-16659|0xffffffffffffbeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16659|0xffffffffffffbeed], long[0|0x0]] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: i47 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i85 
y: i85 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i85 y: i85  <|@  <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@79a671cc1868
stamp: void
targetMethod: HotSpotMethod<TestCases.addAndDivide(int, int)>
=== Inputs ===
arguments: a82 i85 i45 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a82 i85 i45  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 28
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a82 i85 - i88 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a82 i85 - i88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i47 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 23
identity: ANY_LOCATION
polymorphic: false
stamp: i32
targetMethod: Direct#TestCases.addAndDivide
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v66 
stateDuring: ?103 
=== Succesors ===
next: v9 
=== Usages ===
i49 
=== Predecessor ===
v73 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v66 stateDuring: ?103 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i47 
y: i88 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i47 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i32 i50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i85 
y: i31 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i85 y: i31  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
i47 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = IMUL (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:28) [bci: 23]
stack: v3|DWORD 
locals: v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@79a688ec4370 state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD, v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i55 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i49 i30 
=== Succesors ===
=== Usages ===
?14 i30 ?104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: i49 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i50 i32 
=== Succesors ===
=== Usages ===
?14 i32 ?104 v21 i26 i26 v67 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: i50 i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.273390607896142E150
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
osrLoop: true
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v9 
=== Succesors ===
next: v25 
=== Usages ===
i55 i54 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v9 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@79a67ed06850
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i20 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i54 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v24 #falseSuccessor: v22  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD, v14|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 27
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a82 i54 i55 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a82 i54 i55  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
reason: UnreachedCode
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@79a67ee59130
stamp: void
=== Inputs ===
stateBefore: ?14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 996] y: -5907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1008] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:27) [bci: 13]
locals: v1|QWORD[.] v14|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: i28 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i54 
y: i54 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i54 y: i54  <|@  <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@79a671cc1c18
stamp: void
targetMethod: HotSpotMethod<TestCases.addAndDivide(int, int)>
=== Inputs ===
arguments: a82 i54 i26 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a82 i54 i26  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 28
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a82 i54 - i55 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a82 i54 - i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i28 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 23
identity: ANY_LOCATION
polymorphic: false
stamp: i32
targetMethod: Direct#TestCases.addAndDivide
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v67 
stateDuring: ?104 
=== Succesors ===
next: v33 
=== Usages ===
i30 
=== Predecessor ===
v22 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v67 stateDuring: ?104 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i28 
y: i55 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i28 y: i55  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i54 
y: i31 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i31  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i28 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = IMUL (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:28) [bci: 23]
stack: v13|DWORD 
locals: v1|QWORD[.] v14|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@79a688ec4370 state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v13|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, v18|DWORD] destination: B9 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid j113 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
result int[-16444|0xffffffffffffbfc4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16444
stableDimension: 0
stamp: i32 [-16444] ⇊00000000ffffbfc4 ⇈00000000ffffbfc4
stampKind: i32
value: int[-16444|0xffffffffffffbfc4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v71 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16444|0xffffffffffffbfc4], long[20|0x14]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i108 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16659 - -16444] ⇊00000000ffffbec4 ⇈00000000ffffbfed
valueDescription: i32
=== Inputs ===
merge: v105 
values: i107 i112 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v105 values: i107 i112  <|@  <|@
f <@~|@floating>@ <|@
tid j109 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 20] ⇈0000000000000014
valueDescription: i64
=== Inputs ===
merge: v105 
values: j86 j113 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v105 values: j86 j113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v106 v111 
=== Succesors ===
next: v110 
=== Usages ===
i108 j109 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v106 v111 #next: v110  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<Main.loop()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Main.java
sourceLine: 27
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a82 i85 i88 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a82 i85 i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?39 
actionAndReason: i108 
speculation: j109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?39 actionAndReason: i108 speculation: j109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 996], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1008], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:27) [bci: 13]
locals: v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79a670228840 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [r10|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x79a69e10b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79a670228b80 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = IMUL (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:28) [bci: 23]
stack: v3|DWORD 
locals: v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@79a688ec4370 state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD, v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = IMUL (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:28) [bci: 23]
stack: v13|DWORD 
locals: v1|QWORD[.] v14|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@79a688ec4370 state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v13|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, v18|DWORD] destination: B9 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD, v14|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16659|0xffffffffffffbeed], long[0|0x0]] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 996], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1008], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:27) [bci: 13]
locals: v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16444|0xffffffffffffbfc4], long[20|0x14]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 996] y: -5907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1008] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.gammaraylab.Main.loop(Main.java:27) [bci: 13]
locals: v1|QWORD[.] v14|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #10         // org.gammaraylab.TestCases
     3: dup           
     4: invokespecial #2          // org.gammaraylab.TestCases.<init>:()void
     7: astore_0      
     8: ldc           #13         // 1000000000
    10: istore_1      
    11: iconst_0      
    12: istore_2      
    13: iload_1       
    14: ifle          34
    17: iload_2       
    18: aload_0       
    19: iload_1       
    20: iload_1       
    21: iload_1       
    22: imul          
    23: invokevirtual #4          // org.gammaraylab.TestCases.addAndDivide:(int, int)int
    26: iadd          
    27: istore_2      
    28: iinc          
    31: goto          13
    34: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79a670228840 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r11|QWORD[.] = MOV [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = MOV [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr   14  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [r10|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x79a69e10b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   16  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   32  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79a670228b80 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>} <|@ <|@
      nr   40  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = IMUL (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:28) [bci: 23]
stack: stack:28|DWORD 
locals: stack:40|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@79a688ec4370 state [bci:23] <|@ <|@
      nr   72  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction r8|DWORD = DEC stack:32|DWORD size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:32|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = IMUL (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:28) [bci: 23]
stack: stack:32|DWORD 
locals: stack:40|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@79a688ec4370 state [bci:23] <|@ <|@
      nr  110  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = DEC stack:28|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B9 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   84  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] <|@ <|@
      nr   54  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 996], y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 1008], y: r11|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:27) [bci: 13]
locals: stack:40|QWORD[.] r8|DWORD r9|DWORD 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVE input: int[-16444|0xffffffffffffbfc4] <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [r15|QWORD + 996] y: -5907 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [r15|QWORD + 1008] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:27) [bci: 13]
locals: r11|QWORD[.] r8|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #10         // org.gammaraylab.TestCases
     3: dup           
     4: invokespecial #2          // org.gammaraylab.TestCases.<init>:()void
     7: astore_0      
     8: ldc           #13         // 1000000000
    10: istore_1      
    11: iconst_0      
    12: istore_2      
    13: iload_1       
    14: ifle          34
    17: iload_2       
    18: aload_0       
    19: iload_1       
    20: iload_1       
    21: iload_1       
    22: imul          
    23: invokevirtual #4          // org.gammaraylab.TestCases.addAndDivide:(int, int)int
    26: iadd          
    27: istore_2      
    28: iinc          
    31: goto          13
    34: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79a670228840 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r11|QWORD[.] = MOV [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = MOV [rsi|QWORD + 8] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr   14  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [r10|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x79a69e10b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   16  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   32  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79a670228b80 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>} <|@ <|@
      nr   40  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = IMUL (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:28) [bci: 23]
stack: stack:28|DWORD 
locals: stack:40|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@79a688ec4370 state [bci:23] <|@ <|@
      nr   72  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction r8|DWORD = DEC stack:32|DWORD size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:32|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = IMUL (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:28) [bci: 23]
stack: stack:32|DWORD 
locals: stack:40|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@79a688ec4370 state [bci:23] <|@ <|@
      nr  110  <|@ instruction r10|DWORD = ADD (x: stack:32|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = DEC stack:28|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B9 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 6858982232485265408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] <|@ <|@
      nr   54  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 996], y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 1008], y: r11|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:27) [bci: 13]
locals: stack:40|QWORD[.] r8|DWORD r9|DWORD 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVE input: int[-16444|0xffffffffffffbfc4] <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [r15|QWORD + 996] y: -5907 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [r15|QWORD + 1008] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
org.gammaraylab.Main.loop(Main.java:27) [bci: 13]
locals: r11|QWORD[.] r8|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #10         // org.gammaraylab.TestCases
     3: dup           
     4: invokespecial #2          // org.gammaraylab.TestCases.<init>:()void
     7: astore_0      
     8: ldc           #13         // 1000000000
    10: istore_1      
    11: iconst_0      
    12: istore_2      
    13: iload_1       
    14: ifle          34
    17: iload_2       
    18: aload_0       
    19: iload_1       
    20: iload_1       
    21: iload_1       
    22: imul          
    23: invokevirtual #4          // org.gammaraylab.TestCases.addAndDivide:(int, int)int
    26: iadd          
    27: istore_2      
    28: iinc          
    31: goto          13
    34: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec2848896c24204c8b5e104c895c2408448b4608448b0ee800000000904d85db0f84b3000000418b730848ba0000000008000000488d34f248baaddeaddeaddeadde483bd60f85bb0000004183f8010f8c9000000044894c2414418bc8410fafc8498bf3418bd044894424106690e8000000009003442414448b44241041ffc889442410e94000000066660f1f84000000000066666690418bc8410fafc8498bf3418bd044894424140f1f440000e80000000090448b5424104403d0448b44241441ffc844895424104c8b5c24084183f8017dc3e93c00000048c7c600000000e953ffffff41baedbeffff49c7c300000000458997e40300004d899ff0030000e8000000009041bac4bfffff49c7c314000000ebdd448b54241041c787e4030000ede8ffff49c787f003000000000000e80000000090e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79a670228840 slotKind: QWORD  <||@
  Comment 16 6 r11|QWORD[.] = MOV [rsi|QWORD + 16] size: QWORD  <||@
  Comment 20 8 stack:40|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 25 10 r8|DWORD = MOV [rsi|QWORD + 8] size: DWORD  <||@
  Comment 29 12 r9|DWORD = MOV [rsi|QWORD] size: DWORD  <||@
  Comment 32 14 - = NEAR_FOREIGN_CALL [rsi|QWORD] [r10|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x79a69e10b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 32 {Stub<OSR_migration_end(long)void>@0x79a69e10b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 38 16 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 41 18 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 47 block B2 null  <||@
  Comment 47 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 47 28 rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 51 30 rdx|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 61 32 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79a670228b80 encoding: base: 34359738368 shift: 3  <||@
  Comment 65 34 JUMP ~[] destination: B2 -> B3  <||@
  Comment 65 block B3 null  <||@
  Comment 65 36 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 65 38 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}  <||@
  Comment 65 {meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}}  <||@
  Comment 75 40 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 78 42 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B10  <||@
  Comment 84 block B4 null  <||@
  Comment 84 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 46 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 88 48 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 94 block B6 null  <||@
  Comment 94 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 60 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 99 62 rcx|DWORD = IMUL (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 106 64 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 109 66 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 112 68 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 117 70 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@79a688ec4370 state [bci:23]  <||@
  Comment 117 9  <||@
  Comment 119 {HotSpotMethod<TestCases.addAndDivide(int, int)>}  <||@
  Comment 124 [stack:8]at org.gammaraylab.Main.loop(Main.java:28) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:40|QWORD[.]  |stack:32|DWORD  |- 
     stack:   |stack:28|DWORD     |                |    <||@
  Comment 125 72 rax|DWORD = ADD (x: rax|DWORD, y: stack:28|DWORD) size: DWORD  <||@
  Comment 129 74 r8|DWORD = DEC stack:32|DWORD size: DWORD  <||@
  Comment 137 76 stack:32|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 141 80 JUMP ~[] destination: B6 -> B7  <||@
  Comment 146 block B9 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 146 98 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 100 rcx|DWORD = IMUL (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 167 102 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 170 104 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 173 106 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 178 108 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@79a688ec4370 state [bci:23]  <||@
  Comment 178 9  <||@
  Comment 183 {HotSpotMethod<TestCases.addAndDivide(int, int)>}  <||@
  Comment 188 [stack:8]at org.gammaraylab.Main.loop(Main.java:28) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |- 
     stack:   |stack:32|DWORD     |                |    <||@
  Comment 189 110 r10|DWORD = ADD (x: stack:32|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 197 112 r8|DWORD = DEC stack:28|DWORD size: DWORD  <||@
  Comment 205 114 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 210 118 JUMP ~[] destination: B9 -> B7  <||@
  Comment 210 block B7 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 210 82 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 210 78 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 215 84 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 219 86 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 226 block B1 null  <||@
  Comment 226 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 226 22 rsi|QWORD = MOVE input: Object[null]  <||@
  Comment 233 24 JUMP ~[] destination: B1 -> B3  <||@
  Comment 238 block B5 null  <||@
  Comment 238 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 52 r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed]  <||@
  Comment 244 54 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 251 56 JUMP ~[] destination: B5 -> B11  <||@
  Comment 251 block B11 null  <||@
  Comment 251 128 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 251 130 MOV (x: [r15|QWORD + 996], y: r10|DWORD) size: DWORD  <||@
  Comment 258 132 MOV (x: [r15|QWORD + 1008], y: r11|QWORD) size: QWORD  <||@
  Comment 265 134 DEOPT info [bci:13]  <||@
  Comment 265 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x79a6c2468e80, value=133756522497956]:0x79a69e0287a4}  <||@
  Comment 270 [stack:8]at org.gammaraylab.Main.loop(Main.java:27) [bci: 13, duringCall: false, rethrow: false]
              |0                  |1         |2        
     locals:  |stack:40|QWORD[.]  |r8|DWORD  |r9|DWORD   <||@
  Comment 271 block B10 null  <||@
  Comment 271 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 271 122 r10|DWORD = MOVE input: int[-16444|0xffffffffffffbfc4]  <||@
  Comment 277 124 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 284 126 JUMP ~[] destination: B10 -> B11  <||@
  Comment 286 block B8 null  <||@
  Comment 286 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 90 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 291 92 MOV [r15|QWORD + 996] y: -5907 size: DWORD  <||@
  Comment 302 94 MOV [r15|QWORD + 1008] y: 0 size: QWORD  <||@
  Comment 313 96 DEOPT info [bci:13]  <||@
  Comment 313 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x79a6c2468e80, value=133756522497956]:0x79a69e0287a4}  <||@
  Comment 318 [r11:0]at org.gammaraylab.Main.loop(Main.java:27) [bci: 13, duringCall: false, rethrow: false]
              |0             |1         |2         
     locals:  |r11|QWORD[.]  |r8|DWORD  |r10|DWORD   <||@
  Comment 319 {Stub<ExceptionHandlerStub.exceptionHandler>@0x79a69e10b380:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 319 4  <||@
  Comment 325 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x79a6c2468e88, value=133756522497696]:0x79a69e0286a0}  <||@
  Comment 325 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotOSRCompilation-309[org.gammaraylab.Main.loop()@13]"
  method "HotSpotOSRCompilation-309[org.gammaraylab.Main.loop()@13]"
  date 1725719036633
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 79a6a82dc420 89842400c0feff4883ec2848896c24204c8b5e104c895c2408448b4608448b0ee83bf1e2f5904d85db0f84b3000000418b730848ba0000000008000000488d34f248ba5082074008000000483bd60f85bb0000004183f8010f8c9000000044894c2414418bc8410fafc8498bf3418bd044894424106690e8e4b5d4f59003442414448b44241041ffc889442410e94000000066660f1f84000000000066666690418bc8410fafc8498bf3418bd044894424140f1f440000e8a4b5d4f590448b5424104403d0448b44241441ffc844895424104c8b5c24084183f8017dc3e93c00000048c7c600000000e953ffffff41baedbeffff49c7c300000000458997e40300004d899ff0030000e876c2d4f59041bac4bfffff49c7c314000000ebdd448b54241041c787e4030000ede8ffff49c787f003000000000000e846c2d4f590e81ceee2f590e836c1d4f590f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79a670228840 slotKind: QWORD  <||@
  Comment 16 6 r11|QWORD[.] = MOV [rsi|QWORD + 16] size: QWORD  <||@
  Comment 20 8 stack:40|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 25 10 r8|DWORD = MOV [rsi|QWORD + 8] size: DWORD  <||@
  Comment 29 12 r9|DWORD = MOV [rsi|QWORD] size: DWORD  <||@
  Comment 32 14 - = NEAR_FOREIGN_CALL [rsi|QWORD] [r10|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x79a69e10b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 32 {Stub<OSR_migration_end(long)void>@0x79a69e10b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=r10|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 38 16 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 41 18 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 47 block B2 null  <||@
  Comment 47 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 47 28 rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 51 30 rdx|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 61 32 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79a670228b80 encoding: base: 34359738368 shift: 3  <||@
  Comment 65 34 JUMP ~[] destination: B2 -> B3  <||@
  Comment 65 block B3 null  <||@
  Comment 65 36 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 65 38 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}  <||@
  Comment 65 {meta{HotSpotType<Lorg/gammaraylab/TestCases;, resolved>}}  <||@
  Comment 75 40 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 78 42 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B10  <||@
  Comment 84 block B4 null  <||@
  Comment 84 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 46 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 88 48 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 94 block B6 null  <||@
  Comment 94 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 60 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 99 62 rcx|DWORD = IMUL (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 106 64 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 109 66 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 112 68 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 117 70 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@79a688ec4370 state [bci:23]  <||@
  Comment 117 9  <||@
  Comment 119 {HotSpotMethod<TestCases.addAndDivide(int, int)>}  <||@
  Comment 124 [stack:8]at org.gammaraylab.Main.loop(Main.java:28) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:40|QWORD[.]  |stack:32|DWORD  |- 
     stack:   |stack:28|DWORD     |                |    <||@
  Comment 125 72 rax|DWORD = ADD (x: rax|DWORD, y: stack:28|DWORD) size: DWORD  <||@
  Comment 129 74 r8|DWORD = DEC stack:32|DWORD size: DWORD  <||@
  Comment 137 76 stack:32|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 141 80 JUMP ~[] destination: B6 -> B7  <||@
  Comment 146 block B9 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 146 98 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 100 rcx|DWORD = IMUL (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 167 102 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 170 104 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 173 106 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 178 108 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<TestCases.addAndDivide(int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@79a688ec4370 state [bci:23]  <||@
  Comment 178 9  <||@
  Comment 183 {HotSpotMethod<TestCases.addAndDivide(int, int)>}  <||@
  Comment 188 [stack:8]at org.gammaraylab.Main.loop(Main.java:28) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |- 
     stack:   |stack:32|DWORD     |                |    <||@
  Comment 189 110 r10|DWORD = ADD (x: stack:32|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 197 112 r8|DWORD = DEC stack:28|DWORD size: DWORD  <||@
  Comment 205 114 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 210 118 JUMP ~[] destination: B9 -> B7  <||@
  Comment 210 block B7 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 210 82 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 210 78 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 215 84 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 219 86 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 226 block B1 null  <||@
  Comment 226 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 226 22 rsi|QWORD = MOVE input: Object[null]  <||@
  Comment 233 24 JUMP ~[] destination: B1 -> B3  <||@
  Comment 238 block B5 null  <||@
  Comment 238 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 52 r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed]  <||@
  Comment 244 54 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 251 56 JUMP ~[] destination: B5 -> B11  <||@
  Comment 251 block B11 null  <||@
  Comment 251 128 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 251 130 MOV (x: [r15|QWORD + 996], y: r10|DWORD) size: DWORD  <||@
  Comment 258 132 MOV (x: [r15|QWORD + 1008], y: r11|QWORD) size: QWORD  <||@
  Comment 265 134 DEOPT info [bci:13]  <||@
  Comment 265 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x79a6c2468e80, value=133756522497956]:0x79a69e0287a4}  <||@
  Comment 270 [stack:8]at org.gammaraylab.Main.loop(Main.java:27) [bci: 13, duringCall: false, rethrow: false]
              |0                  |1         |2        
     locals:  |stack:40|QWORD[.]  |r8|DWORD  |r9|DWORD   <||@
  Comment 271 block B10 null  <||@
  Comment 271 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 271 122 r10|DWORD = MOVE input: int[-16444|0xffffffffffffbfc4]  <||@
  Comment 277 124 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 284 126 JUMP ~[] destination: B10 -> B11  <||@
  Comment 286 block B8 null  <||@
  Comment 286 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 90 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 291 92 MOV [r15|QWORD + 996] y: -5907 size: DWORD  <||@
  Comment 302 94 MOV [r15|QWORD + 1008] y: 0 size: QWORD  <||@
  Comment 313 96 DEOPT info [bci:13]  <||@
  Comment 313 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x79a6c2468e80, value=133756522497956]:0x79a69e0287a4}  <||@
  Comment 318 [r11:0]at org.gammaraylab.Main.loop(Main.java:27) [bci: 13, duringCall: false, rethrow: false]
              |0             |1         |2         
     locals:  |r11|QWORD[.]  |r8|DWORD  |r10|DWORD   <||@
  Comment 319 {Stub<ExceptionHandlerStub.exceptionHandler>@0x79a69e10b380:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 319 4  <||@
  Comment 325 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x79a6c2468e88, value=133756522497696]:0x79a69e0286a0}  <||@
  Comment 325 5  <||@
  HexCodeFile>>> <|@
end_nmethod
